<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="ALARM" id="5">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//bfg projectile
if (w != 7) || dead || a4 &lt; 40 {exit;}
    
b_dir = plr_aim();
a4 -= 40;

if position_meeting(x, y, o_water) &amp;&amp; global.mp_waterfrag
{
  if !global.mp_godmode &amp;&amp; !st_inv
  {
    killer_id = cl_id;
    kill_type = 7;
    plr_send_effect(1, x, y);
    if global.mp_waterfrag == 1 { plr_hurt(global.mp_waterbfgdmg); } else { plr_hurt(999); }
    plr_send_pain();
  }
  
  plr_send_stat();
  
  if global.mp_waterfrag == 2
  {
    with instance_place(x, y, o_water)
    {
      var s;
      s = instance_create(x, y, o_supersplash);
      s.dmg = global.mp_waterbfgdmg;
      s.killer_id = other.cl_id;
      s.kill_type = 7;
      s.team = other.cl_team;
    }
  }

  exit;
}

p = instance_create(x, y, o_projectile);
p.l_id = cl_id;
p.direction = b_dir;
p.p_type = 3;
p.p_spd = 10;
p.l_team = cl_team;
p.pr_id = ds_list_find_index(global.sv_proj, noone);
ds_list_replace(global.sv_proj, p.pr_id, p.id);

plr_send_stat();
plr_send_sprite(cl_id, 1, 0);
plr_send_sound(16, x, y);
with p {plr_send_projectile(3, other.b_dir, x, y);}

</argument>
      </arguments>
    </action>
  </actions>
</event>
