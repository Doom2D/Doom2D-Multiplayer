<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">ed_keys(); //check for keys
cmd1 = API_Check_Command(1);
switch (cmd1)
{
  case ui_mbar_m1q:
   ed_dialogs('EXIT')
  break;
  
  case ui_mbar_m1n:
   ed_dialogs('MAPCLR')
  break;
  
  case ui_mbar_m1o:
    map_load();
  break;
  
  case ui_mbar_m1s:
    map_save();
  break;
  
  case ui_mbar_m3a:
    ed_dialogs('ABOUT');
  break;
  
  case ui_mbar_m3m:
    ed_dialogs('MANUAL');
  break;

  case ui_mbar_m3i:
    ed_ui_info();
  break;
  
  case ui_mbar_m2e:
    ed_settings();
  break;
  
  case ui_mbar_m2m:
    ed_map_settings();
  break;
  
  case ui_mbar_m2r:
    ed_tbox_init();
  break;
}
cmd2 = API_Check_Command(2);
if cmd2 == ui_tx_bt {ed_tex_select();}  
cmd3 = API_Check_Command(3);
if cmd3 != 0
{
    switch cmd3
    {
        case ui_win2_b1:
            var color_temp;
            color_temp = get_color(background_color);
            if color_temp != -1 {background_color = color_temp;}
        break;
        
        case ui_win2_rb1:
            if global.ed_g_vis {background_assign(bk_current, bk_grid16);}
            if global.ed_g_sz != 1 {global.ed_g_sz = 16;}
            global.ed_g_szo = 16;
        break;
        
        case ui_win2_rb2:
            if global.ed_g_vis {background_assign(bk_current, bk_grid8);}
            if global.ed_g_sz != 1 {global.ed_g_sz = 8;}
            global.ed_g_szo = 8;
        break;
        
        case ui_win2_cb1:
            if !API_Button_GetCheck(ui_win2_cb1)
            {
                global.ed_g_vis = false;
                background_assign(bk_current, bk_nogrid);
            }
            else
            {
                global.ed_g_vis = true;
                switch global.ed_g_szo
                {
                    case 8:
                        background_assign(bk_current, bk_grid8);
                    break;
                    case 16:
                        background_assign(bk_current, bk_grid16);
                    break;
                }
            }
        break;
        
        case ui_win2_cb2:
            if !API_Button_GetCheck(ui_win2_cb2) 
            {
                global.ed_g_sz = 1;
            }
            else
            {
                global.ed_g_sz = global.ed_g_szo;
            }
        break;
        
        case ui_win2_cb3:
            global.ed_outline = API_Button_GetCheck(ui_win2_cb3);
        break;
        
        case ui_win2_b2:
            API_Window_Destroy(ui_win2);
          //API_Control_Destroy(ui_win2);
            ui_win2 = -1;
        break;
    }
}
cmd4 = API_Check_Command(4);
if cmd4 != 0
{
    switch cmd4
    {
        case ui_win3_b1:
            _tmp = get_open_filename('Все поддерживаемые файлы музыки |*.xm; *.mod; *.it; *.s3m; *.wav; *.mp3; *.ogg; *.mid', 'data\music\AC.xm');
            if !file_exists(_tmp) {exit;}
            _tmp = string_replace(_tmp, global.ed_workdir + '\', '');
            global.map_mus = _tmp;
            API_Control_SetText(ui_win3_t1, string_replace(global.map_mus, "data\music\", ""));
        break;
        
        case ui_win3_b2:
            _tmp = get_open_filename('Все поддерживаемые файлы текстур |*.tga; *.png; *.jpg; *.gif', 'data\sky\D2DSKY1.png');
            if !file_exists(_tmp) {exit;}
            _tmp = string_replace(_tmp, global.ed_workdir + '\', '');
            global.map_bkg = _tmp;
            API_Control_SetText(ui_win3_t2, string_replace(global.map_bkg, "data\sky\", "")); 
        break;
        
        case ui_win3_b3:
            global.map_w = real(API_Control_GetText(ui_win3_e1));
            global.map_h = real(API_Control_GetText(ui_win3_e2));
            global.map_name = string_delete(API_Control_GetText(ui_win3_e3), 33, string_length(API_Control_GetText(ui_win3_e3)));
            global.map_desc = string_delete(API_Control_GetText(ui_win3_e4), 65, string_length(API_Control_GetText(ui_win3_e4)));
            API_Window_Destroy(ui_win3);
          //API_Control_Destroy(ui_win3);
            ui_win3 = -1;
        break;
    }
} 


cmd5 = API_Check_Command(5);
if cmd5 == ui_if_bt
{
    API_Control_SetText(ui_win4_t1, 
                    'Текстур: ' + string(global.tex_n - 1) + chr(13) + chr(10) +
                    'Тайлов окружения: ' + string(instance_number(o_solid) +
                                                  instance_number(o_jthr) +
                                                  instance_number(o_bkg) +
                                                  instance_number(o_frg) +
                                                  instance_number(o_liquid) +
                                                  instance_number(o_lift)) + chr(13) + chr(10) +
                    'Предметов: ' + string(instance_number(o_item)) + chr(13) + chr(10) +
                    'Областей: ' + string(instance_number(o_spawn)));
    API_Control_SetText(ui_if_bt, 'Обновить статистику');
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
