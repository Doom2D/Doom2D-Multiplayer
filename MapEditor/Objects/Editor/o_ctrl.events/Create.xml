<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">image_speed = 0;

//Editor initialization
global.ed_apptitle = room_caption;
set_application_title(global.ed_apptitle);
rtl_window_set_size_limit( window_handle(), MIN_WIN_WIDTH, MIN_WIN_HEIGHT );
background_assign(bk_current, bk_grid16);
//DA HARD WAY
if filename_dir(program_directory) != filename_dir(temp_directory) { rtl_set_working_directory(program_directory); }

//texture array
var i;
for (i = 0; i &lt; MAX_TXRS_NUM; i += 1)
{
  global.tex[i] = noval;
  global.tex_nm[i] = '';
}

global.tex[0] = tex_none;
global.tex_n = 1;

//map settings
map_init();
global.mbk_ind = noval;
global.map_proc = false;

//editor settings
global.ed_g_sz = 16; //grid size
global.ed_g_szo = 16; //old grid size
global.ed_g_vis = true; //is it visible
global.ed_g_use = true; //does it work
global.ed_outline = false; //outline the objects
global.ed_camspeed = 16; //camera speed (one step in pixels)
global.ed_mode = MODE_NORMAL; //0 - normal; 1 - trigger zone placement; 2 - trigger target zone placement
global.ed_trg = 0; //trigger type (see server code)

//editor variables
x_off = 0;
y_off = 0;
ix_off = 0;
iy_off = 0;
x1 = 0;
x2 = 0;
y1 = 0;
y2 = 0;
tw = 0;
th = 0;
col = 0;
spr = noval;
tx = 0;
im = 0;
trg = noone;
allvis = true;

//restructured variables
obj_sel = BLOCK_SOLID;
tex_sel = NO_TEXTURE;

//Interface initialization
API_Init();
API_Check_Set(1, window_handle());

win_x = 0;
win_y = 0;
std_win_w = max( round_to( display_get_width()  / 1.5, global.ed_camspeed ), MIN_WIN_WIDTH  );
std_win_h = max( round_to( display_get_height() / 1.5, global.ed_camspeed ), MIN_WIN_HEIGHT );

ui_win1 = noval; //toolbox window
ui_win2 = noval; //editor settings window
ui_win3 = noval; //map settings window
ui_win4 = noval; //map information window
ui_win5 = noval; //textures deleting window
ui_win6 = noval; //objects moving window
ui_win7 = noval; //map optimization window
ui_win8 = noval; //objects mirroring window
ui_win9 = noval; //map navigation window

ui_menu_cr();
ed_ui_init();

//standard timer values for triggers t#
t2_std = 0;
t4_std = 0;

instance_create(x, y, o_cam);

//trying to load map from command-line argumented filename
if parameter_count() &gt; 0 { map_load( parameter_string(1) ); }

</argument>
      </arguments>
    </action>
  </actions>
</event>
